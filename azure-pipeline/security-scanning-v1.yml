# Build the repo apps and do security scanning
# Pipeline: `Companion App - Security Scanning V1`
# Output:
# - the results of security scanning in the `Advanced Security` tab of the repo

trigger: none
  
pool: 
  vmImage: "macOS-13"

variables:
  flutterVersion: "3.24.2"
  flutterToolPath: "$(Agent.ToolsDirectory)/Flutter/${flutterVersion}/macos/flutter/bin"
  keyPropertiesPath: "$(Build.SourcesDirectory)/android/key.properties"
  bundlToolVersion: "1.15.6"
  appIdentifier: "io.alvys.app.dev"
  environment: "dev"
  iosDistribMethodString: "ad-hoc"
  provisionProfile: "alvys_dev_adhoc.mobileprovision"

stages:
- stage: iOS
  jobs:
  - job: 
    steps:
        - task: AdvancedSecurity-Codeql-Init@1
          displayName: "AdvancedSecurity - Prerequisites"
          inputs: 
            languages: 'swift' #no dart/flutter support
        - task: DownloadSecureFile@1
          name: env
          displayName: Download .env file
          inputs:
            secureFile: 'env'     
        - task: InstallAppleCertificate@2
          enabled: true
          inputs:
            certSecureFile: 'apple_distribution.p12'
            certPwd: '$(P12_PWD)'
            keychain: 'temp'
        - task: InstallAppleProvisioningProfile@1
          inputs:
            provisioningProfileLocation: 'secureFiles'
            provProfileSecureFile: '${{variables.provisionProfile}}'
        - task: Bash@3
          displayName: Copy .env file
          inputs:
            targetType: 'inline'
            script: |
              cp $(env.secureFilePath) $(Build.SourcesDirectory)/.env
        - task: FlutterInstall@0
          inputs:
            mode: 'custom'
            customUrl: 'https://storage.googleapis.com/flutter_infra_release/releases/stable/macos/flutter_macos_$(flutterVersion)-stable.zip'   
        - script: |
            $(flutterToolPath)/flutter pub get && $(flutterToolPath)/flutter pub run build_runner build --delete-conflicting-outputs
          displayName: Build Runner     
        - script: |
            $(flutterToolPath)/flutter build ios --flavor=${{variables.environment}} --target=lib/${{variables.environment}}.dart --release --no-codesign      
          displayName: "Flutter Build iOS"  
        - script: | 
            fastlane ios build_${{variables.environment}}
          workingDirectory: '$(Build.SourcesDirectory)/ios'
          displayName: Xcode Archive and Sign
        - task: AdvancedSecurity-Dependency-Scanning@1
          displayName: "AdvancedSecurity Scan - Dependency"
        - task: AdvancedSecurity-Codeql-Analyze@1
          displayName: "AdvancedSecurity Scan - Code"

- stage: Android
  dependsOn: []
  jobs:
  - job:
    steps:
        - task: AdvancedSecurity-Codeql-Init@1
          displayName: "AdvancedSecurity - Prerequisites"
          inputs: 
            languages: 'java' #no kotlin support
        - task: JavaToolInstaller@0
          displayName:  "Setup Java Environment"
          inputs:
            versionSpec: '17'
            jdkArchitectureOption: 'x64'
            jdkSourceOption: 'PreInstalled'
        - task: DownloadSecureFile@1
          name: env
          displayName: Download .env file
          inputs:
            secureFile: 'env'
        - task: Bash@3
          displayName: Copy .env file
          inputs:
            targetType: 'inline'
            script: |
              cp $(env.secureFilePath) $(Build.SourcesDirectory)/.env     
        - task: DownloadSecureFile@1
          name: key
          displayName: Download .jks file
          inputs:
            secureFile: 'Alvys.jks'
        - script: |
            curl --output $(Agent.ToolsDirectory)/bundletool.jar --location 'https://github.com/google/bundletool/releases/download/$(bundlToolVersion)/bundletool-all-$(bundlToolVersion).jar'
          displayName: "Download Google bundletool"    
        - script: |
            chmod +x $(Agent.ToolsDirectory)/bundletool.jar 
          displayName: "Update bundletool permission"        
        - task: Bash@3
          displayName: Copy android signing key
          inputs:
            targetType: 'inline'
            script: |
              cp $(key.secureFilePath) $(Build.SourcesDirectory)/android/app/key.jks
        - script: |
            echo "storeFile=$(Build.SourcesDirectory)/android/app/key.jks" >> $(keyPropertiesPath)
            echo "storePassword=$(openssl enc -base64 -d <<< $(STORE_PWD))" >> $(keyPropertiesPath)
            echo "keyAlias=$(KEY_ALIAS)" >> $(keyPropertiesPath)
            echo "keyPassword=$(openssl enc -base64 -d <<< $(KEY_PWD))" >> $(keyPropertiesPath)
          displayName: 'Generate key.properties file'
        - task: FlutterInstall@0
          inputs:
            mode: 'custom'
            customUrl: 'https://storage.googleapis.com/flutter_infra_release/releases/stable/macos/flutter_macos_$(flutterVersion)-stable.zip'   
        - script: |
            $(flutterToolPath)/flutter pub get && $(flutterToolPath)/flutter pub run build_runner build --delete-conflicting-outputs
          displayName: Build Runner 
        - script: |
            $(flutterToolPath)/flutter build appbundle --flavor=${{variables.environment}} --target=lib/${{variables.environment}}.dart   
          displayName: "Build Android"      
        - script: |
            java -jar $(Agent.ToolsDirectory)/bundletool.jar build-apks --mode=universal \
            --bundle app-${{variables.environment}}-release.aab \
            --output app-${{variables.environment}}-release.apks \
            --ks $(Build.SourcesDirectory)/android/app/key.jks \
            --ks-pass=pass:$(openssl enc -base64 -d <<< $(STORE_PWD)) \
            --ks-key-alias $(KEY_ALIAS) \
            --key-pass=pass:$(openssl enc -base64 -d <<< $(KEY_PWD)) \
            && unzip -p app-${{variables.environment}}-release.apks universal.apk > app-${{variables.environment}}-release-universal.apk
          workingDirectory: '$(Build.SourcesDirectory)/build/app/outputs/bundle/${{variables.environment}}Release'
          displayName: "Generate universal apk"
        - task: AdvancedSecurity-Dependency-Scanning@1
          displayName: "AdvancedSecurity Scan - Dependency"
        - task: AdvancedSecurity-Codeql-Analyze@1
          displayName: "AdvancedSecurity Scan - Code"
