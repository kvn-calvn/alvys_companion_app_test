name: Android Build

on:
  push:
    branches: [qa, dev, main]
  pull_request:
    branches: [qa, dev, main]

env:
  FLUTTER_VERSION: "3.29.1"
  BUNDLETOOL_VERSION: "1.15.6"

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          if [[ $GITHUB_REF == 'refs/heads/dev' ]]; then
            echo "APP_ID=io.alvys.app.dev" >> $GITHUB_ENV
            echo "ENV=dev" >> $GITHUB_ENV
          elif [[ $GITHUB_REF == 'refs/heads/qa' ]]; then
            echo "APP_ID=io.alvys.app.qa" >> $GITHUB_ENV
            echo "ENV=qa" >> $GITHUB_ENV
          elif [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            echo "APP_ID=io.alvys.app" >> $GITHUB_ENV
            echo "ENV=prod" >> $GITHUB_ENV
          fi

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Download .env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

      - name: Download google-services.json
        run: echo "${{ secrets.GOOGLE_SERVICES_JSON }}" > android/app/google-services.json

      - name: Setup Android keystore
        run: |
          echo "${{ secrets.ALVYS_JKS }}" | base64 --decode > android/app/key.jks
          echo "storeFile=key.jks" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties

      - name: Download bundletool
        run: |
          curl -o bundletool.jar -L "https://github.com/google/bundletool/releases/download/$(echo $BUNDLETOOL_VERSION)/bundletool-all-$(echo $BUNDLETOOL_VERSION).jar"
          chmod +x bundletool.jar

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: Debug ENV_FILE content (REMOVE IN PRODUCTION)
        run: |
          echo "First 10 characters of ENV_FILE:"
          head .env

      - name: Install dependencies & run build_runner
        run: |
          flutter pub get
          flutter pub run build_runner build --delete-conflicting-outputs

      - name: Build Android
        run: flutter build appbundle --flavor=${{ env.ENV }} --target=lib/${{ env.ENV }}.dart

      - name: Generate Universal APK
        run: |
          cd build/app/outputs/bundle/${{ env.ENV }}Release
          java -jar ../../../../bundletool.jar build-apks \
            --mode=universal \
            --bundle=app-${{ env.ENV }}-release.aab \
            --output=app-${{ env.ENV }}-release.apks \
            --ks=../../../../../android/app/key.jks \
            --ks-pass=pass:${{ secrets.STORE_PASSWORD }} \
            --ks-key-alias=${{ secrets.KEY_ALIAS }} \
            --key-pass=pass:${{ secrets.KEY_PASSWORD }}
          unzip -p app-${{ env.ENV }}-release.apks universal.apk > app-${{ env.ENV }}-release-universal.apk

      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: aab
          path: build/app/outputs/bundle/${{ env.ENV }}Release/app-${{ env.ENV }}-release.aab

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: build/app/outputs/bundle/${{ env.ENV }}Release/app-${{ env.ENV }}-release-universal.apk
