plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

// def flutterRoot = localProperties.getProperty('flutter.sdk')
// if (flutterRoot == null) {
//     throw new RuntimeException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
// }

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

// apply plugin: 'com.android.application'
// apply plugin: 'kotlin-android'
// apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion flutter.compileSdkVersion
    namespace = "io.alvys.app.alvys3"
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {                                                             
        checkReleaseBuilds false                                                
    }     

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        multiDexEnabled true
        applicationId "io.alvys.alvys"
        minSdkVersion 26
        targetSdkVersion 34
        compileSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    flavorDimensions "default"
    productFlavors { 
        prod {
            dimension "default"
            //applicationIdSuffix ""           
            manifestPlaceholders["appName"] = "Alvys"
        }
        qa {
            dimension "default"
            applicationIdSuffix ".qa"
            manifestPlaceholders["appName"] =  "[qa] Alvys"
        }
        dev {
            dimension "default"
            applicationIdSuffix ".dev"
            manifestPlaceholders["appName"] =  "[dev] Alvys"
        }
    }

    signingConfigs {
        release {
            if (System.getenv()["CI"]) { // CI=true is exported by Codemagic
                storeFile file(System.getenv()["FCI_KEYSTORE_PATH"])
                storePassword System.getenv()["FCI_KEYSTORE_PASSWORD"]
                keyAlias System.getenv()["FCI_KEY_ALIAS"]
                keyPassword System.getenv()["FCI_KEY_PASSWORD"]               
                println 'STOREFILE: '+storeFile
            } else {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
                println 'File '+storeFile
            }
        }
    }


    buildTypes {
        release {          
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            ndk {
                abiFilters 'armeabi-v7a','arm64-v8a','x86_64'
            } 
        }
    }
    namespace 'io.alvys.app.alvys3'
}

flutter {
    source '../..'
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.10'
    //implementation 'com.microsoft.azure:notification-hubs-android-sdk:1.1.6'
    //implementation 'com.microsoft.azure:notification-hubs-android-sdk:2.0.0@aar'
    implementation 'com.microsoft.azure:notification-hubs-android-sdk-fcm:2.0.0'
    implementation 'com.android.support:multidex:2.0.1'
    implementation platform('com.google.firebase:firebase-bom:31.2.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    //Coroutines to make the HTTP requests asynchronous(In the background thread)
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    // Gson to convert raw JSON to pretty JSON
    implementation 'com.google.code.gson:gson:2.8.9'
    def appCenterSdkVersion = '4.4.5'
    implementation "com.microsoft.appcenter:appcenter-analytics:${appCenterSdkVersion}"
    implementation "com.microsoft.appcenter:appcenter-crashes:${appCenterSdkVersion}"



}
//apply plugin: 'com.google.gms.google-services'
//apply plugin: 'com.google.firebase.crashlytics'